{"version":3,"sources":["audio/2.mp3","audio/3.mp3","audio/4.mp3","audio/5.mp3","audio/6.mp3","logo.png","Intro.js","Tour.js","Outro.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Intro","this","props","enabled","title","className","style","backgroundColor","height","src","frameborder","allow","allowfullscreen","onClick","hideIntro","icon","faArrowRight","Component","Tour","controls","sound2","sound3","sound4","sound5","sound6","hideTour","Outro","App","state","introActive","tourActive","outroActive","logo","alt","setState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oJAAAA,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,kC,uLCkC5BC,E,uKA5BH,IAAD,OACP,OAAIC,KAAKC,MAAMC,QAEX,6BACE,4BACEC,MAAM,cACNC,UAAU,aACVC,MAAO,CAACC,gBAAiB,WACzBC,OAAO,MACPC,IAAI,uDACJC,YAAY,IACZC,MAAM,0EACNC,iBAAe,GARjB,wCAUA,yBAAKP,UAAU,aACb,4BAAQA,UAAU,8CAA8CQ,QAAS,WACvE,EAAKX,MAAMY,cADb,oBAEoB,kBAAC,IAAD,CAAiBC,KAAMC,SAK1C,S,GAvBOC,a,6GCmDLC,E,uKA3CH,IAAD,OACP,OAAIjB,KAAKC,MAAMC,QAEX,yBAAKE,UAAU,kBACb,yBAAKA,UAAU,uDACb,4BAAI,6CAAJ,WACA,6BACA,kBAAC,IAAD,CAAkBc,UAAQ,EAACV,IAAKW,IAAQhB,MAAM,yBAEhD,yBAAKC,UAAU,uDACb,4BAAI,6CAAJ,aACA,6BACA,kBAAC,IAAD,CAAkBc,UAAQ,EAACV,IAAKY,IAAQjB,MAAM,yBAEhD,yBAAKC,UAAU,uDACb,4BAAI,6CAAJ,gBACA,6BACA,kBAAC,IAAD,CAAkBc,UAAQ,EAACV,IAAKa,IAAQlB,MAAM,yBAEhD,yBAAKC,UAAU,uDACb,4BAAI,6CAAJ,gBACA,6BACA,kBAAC,IAAD,CAAkBc,UAAQ,EAACV,IAAKc,IAAQnB,MAAM,yBAEhD,yBAAKC,UAAU,uDACb,4BAAI,6CAAJ,mBACA,6BACA,kBAAC,IAAD,CAAkBc,UAAQ,EAACV,IAAKe,IAAQpB,MAAM,yBAEhD,yBAAKC,UAAU,kBACb,4BAAQA,UAAU,mDAAmDQ,QAAS,WAC5E,EAAKX,MAAMuB,aADb,2BAE2B,kBAAC,IAAD,CAAiBV,KAAMC,SAKjD,S,GAtCMC,aCiBJS,E,uKAzBX,OAAIzB,KAAKC,MAAMC,QAEX,6BACE,4BACEC,MAAM,cACNC,UAAU,aACVC,MAAO,CAACC,gBAAiB,WACzBC,OAAO,MACPC,IAAI,uDACJC,YAAY,IACZC,MAAM,0EACNC,iBAAe,GARjB,wCAUA,yBAAKP,UAAU,yCACb,4BAAI,8DAKH,S,GArBOY,a,iBCkDLU,E,kDA3Cb,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IAED0B,MAAQ,CACXC,aAAa,EACbC,YAAY,EACZC,aAAa,GANE,E,qDAWT,IAAD,OACP,OACE,6BACE,yBAAK1B,UAAU,OAAOC,MAAO,CAACC,gBAAiB,YAC7C,yBACEF,UAAU,QACVI,IAAKuB,IACLC,IAAI,WACJpB,QAAS,WACP,EAAKqB,SAAS,CAAEL,aAAa,IAC7B,EAAKK,SAAS,CAAEJ,YAAY,IAC5B,EAAKI,SAAS,CAAEH,aAAa,QAInC,kBAAC,EAAD,CACE5B,QAASF,KAAK2B,MAAMC,YACpBf,UAAW,WACT,EAAKoB,SAAS,CAAEL,aAAa,IAC7B,EAAKK,SAAS,CAAEJ,YAAY,OAEhC,kBAAC,EAAD,CAAM3B,QAASF,KAAK2B,MAAME,WACxBL,SAAU,WACR,EAAKS,SAAS,CAAEJ,YAAY,IAC5B,EAAKI,SAAS,CAAEH,aAAa,OAEjC,kBAAC,EAAD,CAAO5B,QAASF,KAAK2B,MAAMG,mB,GAvCjBd,aCKEkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6fb1de97.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/2.d6cb6efd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.fb716f41.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.e549b76b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/5.035e3f2d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/6.36927f3b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/logo.be482a2a.png\";","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\n\n\nclass Intro extends Component {\n  render() {\n    if (this.props.enabled) {\n      return (\n        <div>\n          <iframe \n            title=\"Intro Video\" \n            className=\"w-100 pb-2\"\n            style={{backgroundColor: '#5180AD'}} \n            height=\"220\" \n            src=\"https://www.youtube.com/embed/Spb4kmAW0Oc?controls=0\" \n            frameborder=\"0\" \n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n            allowfullscreen\n          >Video not supported on this browser.</iframe>\n          <div className=\"col-md-12\">\n            <button className=\"btn btn-lg mt-4 p-3 btn-block btn-secondary\" onClick={() => {\n              this.props.hideIntro();\n            }}>Continue to Tour <FontAwesomeIcon icon={faArrowRight} /></button>\n          </div>\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n}\n\n\nexport default Intro;","import React, { Component } from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport sound2 from'./audio/2.mp3';\nimport sound3 from'./audio/3.mp3';\nimport sound4 from'./audio/4.mp3';\nimport sound5 from'./audio/5.mp3';\nimport sound6 from'./audio/6.mp3';\n\n\nclass Tour extends Component {\n  render() {\n    if (this.props.enabled) {\n      return (\n        <div className=\"col-md-12 mt-4\">\n          <div className=\"rounded p-3 mb-4 transparent text-center text-white\">\n            <h3><strong>Station 2</strong> | Barn</h3>\n            <hr />\n            <ReactAudioPlayer controls src={sound2} title=\"Vir-Clar Farms Tour\" />\n          </div>\n          <div className=\"rounded p-3 mb-4 transparent text-center text-white\">\n            <h3><strong>Station 3</strong> | Calves</h3>\n            <hr />\n            <ReactAudioPlayer controls src={sound3} title=\"Vir-Clar Farms Tour\" />\n          </div>\n          <div className=\"rounded p-3 mb-4 transparent text-center text-white\">\n            <h3><strong>Station 4</strong> | Digesters</h3>\n            <hr />\n            <ReactAudioPlayer controls src={sound4} title=\"Vir-Clar Farms Tour\" />\n          </div>\n          <div className=\"rounded p-3 mb-4 transparent text-center text-white\">\n            <h3><strong>Station 5</strong> | Equipment</h3>\n            <hr />\n            <ReactAudioPlayer controls src={sound5} title=\"Vir-Clar Farms Tour\" />\n          </div>\n          <div className=\"rounded p-3 mb-4 transparent text-center text-white\">\n            <h3><strong>Station 6</strong> | Feed &amp; Grain</h3>\n            <hr />\n            <ReactAudioPlayer controls src={sound6} title=\"Vir-Clar Farms Tour\" />\n          </div>\n          <div className=\"col-md-12 mb-4\">\n            <button className=\"btn btn-lg mt-4 p-3 mb-4 btn-block btn-secondary\" onClick={() => {\n              this.props.hideTour();\n            }}>Continue to Parlor Tour <FontAwesomeIcon icon={faArrowRight} /></button>\n          </div>\n        </div>\n      )\n    } else {\n      return null;\n    }\n  }\n}\n\n\nexport default Tour;","import React, { Component } from 'react';\n\nclass Outro extends Component {\n  render() {\n    if (this.props.enabled) {\n      return (\n        <div>\n          <iframe \n            title=\"Outro Video\" \n            className=\"w-100 pb-2\"\n            style={{backgroundColor: '#5180AD'}} \n            height=\"219\" \n            src=\"https://www.youtube.com/embed/dYevheZQPy4?controls=0\" \n            frameborder=\"0\" \n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n            allowfullscreen\n          >Video not supported on this browser.</iframe>\n          <div className=\"col-md-12 mt-4 text-center text-white\">\n            <h3><strong>Thank you for visiting!</strong></h3>\n          </div>\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n}\n\n\nexport default Outro;","import React, { Component } from 'react';\nimport Intro from './Intro';\nimport Tour from './Tour';\nimport Outro from './Outro';\nimport logo from './logo.png';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      introActive: true,\n      tourActive: false,\n      outroActive: false\n    }\n\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"pb-2\" style={{backgroundColor: '#5180AD'}}>\n          <img \n            className=\"w-100\" \n            src={logo}\n            alt=\"Vir Clar\"\n            onClick={() => {\n              this.setState({ introActive: true });\n              this.setState({ tourActive: false });\n              this.setState({ outroActive: false });\n            }}\n          />\n        </div>\n        <Intro\n          enabled={this.state.introActive}\n          hideIntro={() => {\n            this.setState({ introActive: false });\n            this.setState({ tourActive: true });\n          }} />\n        <Tour enabled={this.state.tourActive}\n          hideTour={() => {\n            this.setState({ tourActive: false });\n            this.setState({ outroActive: true });\n          }}/>\n        <Outro enabled={this.state.outroActive} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}